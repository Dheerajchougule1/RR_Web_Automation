<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-23T19:13:02 IST" name="Suite" finished-at="2024-05-23T19:16:00 IST" duration-ms="177812">
    <groups>
    </groups>
    <test started-at="2024-05-23T19:13:02 IST" name="Test" finished-at="2024-05-23T19:16:00 IST" duration-ms="177812">
      <class name="Afni_testing.nomination">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:Afni_testing.nomination@4b013c76]" started-at="2024-05-23T19:13:02 IST" name="beforeClass" finished-at="2024-05-23T19:14:21 IST" duration-ms="78945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1146]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Afni_testing.nomination@4b013c76]" started-at="2024-05-23T19:14:21 IST" name="beforeMethod" finished-at="2024-05-23T19:14:23 IST" duration-ms="2231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="singleNominationFlow(java.lang.String)[pri:1, instance:Afni_testing.nomination@4b013c76]" started-at="2024-05-23T19:14:23 IST" name="singleNominationFlow" finished-at="2024-05-23T19:14:41 IST" duration-ms="18239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1146]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleNominationFlow -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Afni_testing.nomination@4b013c76]" started-at="2024-05-23T19:14:41 IST" name="afterMethod" finished-at="2024-05-23T19:14:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Afni_testing.nomination@4b013c76]" started-at="2024-05-23T19:14:41 IST" name="afterClass" finished-at="2024-05-23T19:14:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Afni_testing.nomination -->
      <class name="Afni_testing.pendingApproval">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:Afni_testing.pendingApproval@1c5920df]" started-at="2024-05-23T19:14:41 IST" name="beforeClass" finished-at="2024-05-23T19:16:00 IST" duration-ms="78314" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1146]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.ss.usermodel.Cell.getStringCellValue()" because the return value of "org.apache.poi.ss.usermodel.Row.getCell(int)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Cell.getStringCellValue()" because the return value of "org.apache.poi.ss.usermodel.Row.getCell(int)" is null
at utility_RR.Utility_RR.DataAppriciateFlow(Utility_RR.java:368)
at Afni_testing.pendingApproval.beforeClass(pendingApproval.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Afni_testing.pendingApproval@1c5920df]" started-at="2024-05-23T19:16:00 IST" name="beforeMethod" finished-at="2024-05-23T19:16:00 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="nominationApproval(java.lang.String)[pri:1, instance:Afni_testing.pendingApproval@1c5920df]" started-at="2024-05-23T19:16:00 IST" name="nominationApproval" finished-at="2024-05-23T19:16:00 IST" duration-ms="4" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1146]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.ss.usermodel.Cell.getStringCellValue()" because the return value of "org.apache.poi.ss.usermodel.Row.getCell(int)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Cell.getStringCellValue()" because the return value of "org.apache.poi.ss.usermodel.Row.getCell(int)" is null
at utility_RR.Utility_RR.DataAppriciateFlow(Utility_RR.java:368)
at Afni_testing.pendingApproval.beforeClass(pendingApproval.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nominationApproval -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Afni_testing.pendingApproval@1c5920df]" started-at="2024-05-23T19:16:00 IST" name="afterMethod" finished-at="2024-05-23T19:16:00 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Afni_testing.pendingApproval@1c5920df]" started-at="2024-05-23T19:16:00 IST" name="afterClass" finished-at="2024-05-23T19:16:00 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Afni_testing.pendingApproval -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
