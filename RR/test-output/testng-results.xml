<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[amount blank verifed]]>
    </line>
    <line>
      <![CDATA[amount 1 verifed]]>
    </line>
    <line>
      <![CDATA[amount 30000 verifed]]>
    </line>
    <line>
      <![CDATA[<font color="red">Test Case Failed: error_rajorpay_verification</font>]]>
    </line>
    <line>
      <![CDATA[<font color="red">Error Message: The following asserts failed:
Alert message is mismatched by cancelling rajor pay payment  expected [Are you sure, you want to close the for?] but found [Are you sure, you want to close the form?]</font>]]>
    </line>
  </reporter-output>
  <suite started-at="2024-04-19T00:59:40 IST" name="Suite" finished-at="2024-04-19T01:00:37 IST" duration-ms="56861">
    <groups>
    </groups>
    <test started-at="2024-04-19T00:59:40 IST" name="Test" finished-at="2024-04-19T01:00:37 IST" duration-ms="56861">
      <class name="my_profile.add_wallet_points">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T00:59:40 IST" name="beforeClass" finished-at="2024-04-19T01:00:02 IST" duration-ms="21674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1307]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="before_Method_Appriciate()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:02 IST" name="before_Method_Appriciate" finished-at="2024-04-19T01:00:07 IST" duration-ms="5020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method_Appriciate -->
        <test-method signature="verify_hardcoded_amount_available(java.lang.String)[pri:301, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:07 IST" name="verify_hardcoded_amount_available" finished-at="2024-04-19T01:00:08 IST" duration-ms="1095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1307]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_hardcoded_amount_available -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:08 IST" name="afterMethod" finished-at="2024-04-19T01:00:08 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="before_Method_Appriciate()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:08 IST" name="before_Method_Appriciate" finished-at="2024-04-19T01:00:12 IST" duration-ms="3394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method_Appriciate -->
        <test-method signature="wallet_balance_verification(java.lang.String)[pri:302, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:12 IST" name="wallet_balance_verification" finished-at="2024-04-19T01:00:12 IST" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1307]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wallet_balance_verification -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:12 IST" name="afterMethod" finished-at="2024-04-19T01:00:12 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="before_Method_Appriciate()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:12 IST" name="before_Method_Appriciate" finished-at="2024-04-19T01:00:15 IST" duration-ms="3527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method_Appriciate -->
        <test-method signature="error_amount_verification(java.lang.String)[pri:303, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:15 IST" name="error_amount_verification" finished-at="2024-04-19T01:00:23 IST" duration-ms="7317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1307]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[amount blank verifed]]>
            </line>
            <line>
              <![CDATA[amount 1 verifed]]>
            </line>
            <line>
              <![CDATA[amount 30000 verifed]]>
            </line>
          </reporter-output>
        </test-method> <!-- error_amount_verification -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:23 IST" name="afterMethod" finished-at="2024-04-19T01:00:23 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="before_Method_Appriciate()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:23 IST" name="before_Method_Appriciate" finished-at="2024-04-19T01:00:27 IST" duration-ms="3982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Method_Appriciate -->
        <test-method signature="error_rajorpay_verification(java.lang.String)[pri:304, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:27 IST" name="error_rajorpay_verification" finished-at="2024-04-19T01:00:31 IST" duration-ms="4146" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[C1307]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Alert message is mismatched by cancelling rajor pay payment  expected [Are you sure, you want to close the for?] but found [Are you sure, you want to close the form?]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Alert message is mismatched by cancelling rajor pay payment  expected [Are you sure, you want to close the for?] but found [Are you sure, you want to close the form?]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at my_profile.add_wallet_points.error_rajorpay_verification(add_wallet_points.java:193)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<font color="red">Test Case Failed: error_rajorpay_verification</font>]]>
            </line>
            <line>
              <![CDATA[<font color="red">Error Message: The following asserts failed:
Alert message is mismatched by cancelling rajor pay payment  expected [Are you sure, you want to close the for?] but found [Are you sure, you want to close the form?]</font>]]>
            </line>
          </reporter-output>
        </test-method> <!-- error_rajorpay_verification -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:31 IST" name="afterMethod" finished-at="2024-04-19T01:00:31 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:my_profile.add_wallet_points@563f38c4]" started-at="2024-04-19T01:00:31 IST" name="afterClass" finished-at="2024-04-19T01:00:37 IST" duration-ms="6559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- my_profile.add_wallet_points -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
